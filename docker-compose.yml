version: "3.8"
services:
  apdb:
    image: mysql:8.0.33
    container_name: apdb
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_ROOT_USER:$MYSQLDB_USER
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    networks:
      - elastic

  appstore:
    container_name: appstore
    build: .
    restart: on-failure
    env_file: ./.env
    ports:
      - $APP_PORT:$APP_PORT
    environment:
      - ES_HOST=elasticsearch
      - SPRING_DATASOURCE_URL=jdbc:mysql://apdb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      - SPRING_DATASOURCE_USERNAME=$MYSQLDB_USER
      - SPRING_DATASOURCE_PASSWORD=$MYSQLDB_ROOT_PASSWORD
    stdin_open: true
    tty: true
    depends_on:
      - apdb
      - redis
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
    container_name: elasticsearch
    restart: always
    env_file: ./.env
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - $ES_PORT:$ES_PORT
    networks:
      - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.16.0
    restart: always
    env_file: ./.env
    ports:
      - $KB_PORT:$KB_PORT
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elastic
    depends_on:
      - elasticsearch

  redis:
    image: redis:6-alpine
    container_name: redis
    restart: always
    env_file: ./.env
    ports:
      - $REDIS_PORT:$REDIS_PORT
    volumes:
      - redis:/docker/data/redis:/data
    networks:
      - elastic

volumes:
  esdata:
    driver: local
  db:
  redis:

networks:
  elastic:
    driver: bridge